{"version":3,"file":"static/js/MoviesPage.c8c8d42b.chunk.js","mappings":"sOAEaA,EAAOC,EAAAA,GAAAA,KAAH,0CAIJC,EAAQD,EAAAA,GAAAA,MAAH,2BAILE,EAASF,EAAAA,GAAAA,OAAH,yG,SCkBnB,EAzBkB,SAAC,GAAiB,IAAhBG,EAAe,EAAfA,SAChB,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,UAACP,EAAD,CAAMI,SAXe,SAAAI,GAErB,GADAA,EAAEC,kBACGH,EAAWI,OAAQ,OAAOC,MAAM,SAErCP,EAASE,GACTC,EAAc,GACjB,EAKG,WACI,SAACL,EAAD,CAAQU,KAAK,OAAOC,MAAOP,EAAYQ,SAhBrB,SAAAN,GACtBD,EAAcC,EAAEO,OAAOF,MAC1B,KAeO,SAACV,EAAD,CAAQS,KAAK,UAAb,sBAGX,E,SCvBYI,EAAOf,EAAAA,GAAAA,GAAH,2GAOJgB,GAAOhB,EAAAA,EAAAA,IAAOiB,EAAAA,GAAPjB,CAAH,iG,UCOjB,EAfuB,SAAC,GAAgB,IAAdkB,EAAa,EAAbA,OAEhBC,GAAWC,EAAAA,EAAAA,MAChB,OACG,wBACKF,EAAOG,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACf,OAAO,SAACR,EAAD,WACH,UAACC,EAAD,CAAMQ,GAAE,kBAAaF,GAAMG,MAAO,CAACC,KAAKP,GAAxC,cAAqDI,MADvCD,EAGrB,KAGZ,E,UC0BD,EAlCe,WAAO,IAAD,EACjB,GAA4BlB,EAAAA,EAAAA,UAAS,IAArC,eAAOc,EAAP,KAAeS,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAEjDC,EAAAA,EAAAA,YAAU,WACDF,IAELG,EAAAA,EAAAA,IAAqBH,GAChBI,MAAK,SAAAC,GACF,IAAMC,EAASD,EAAKE,QAAQjB,KAAI,kBAAoB,CAAEC,GAAtB,EAAGA,GAAuBC,MAA1B,EAAOA,MAAP,IAChC,GAA6B,IAAxBa,EAAKE,QAAQC,OACd,OAAO7B,MAAM,4CAEbiB,EAAUU,EAEjB,GACR,GAAE,CAACN,IAQJ,OACI,iCACI,SAAC,EAAD,CAAW5B,SARK,SAAAqC,GACpBV,EAAgBU,EAAW,CAAEC,MAAOD,GAAa,CAAC,EACrD,KAOO,SAAC,EAAD,CAAgBtB,OAAQA,MAGnC,C","sources":["components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.styled.js","pages/Movies/ListItemMovies.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n    margin:20px;\n`;\n\nexport const Input = styled.input`\n \n`;\n\nexport const Button = styled.button`\n   margin-left:10px;\n   padding: 10px;\n   color: black;\n   cursor:pointer;\n\n`;","import { useState } from \"react\";\nimport {Form , Input , Button} from './SearchBar.styled'\n\nconst SearchBar = ({onSubmit }) => {\n    const [searchFilm, setSearchFilm] = useState('');   \n\n    const handleChangeInput = e => {\n        setSearchFilm(e.target.value);\n    };\n\n    const handleSubminForm = e => {\n        e.preventDefault();\n        if (!searchFilm.trim()) return alert('ERROR');\n        \n        onSubmit(searchFilm);\n        setSearchFilm('');\n    };\n\n\n\n    return (\n        <Form onSubmit={handleSubminForm}>\n            <Input  type=\"text\" value={searchFilm} onChange={handleChangeInput} />\n            <Button type='submit '>Search</Button>\n        </Form>\n    );\n};\n\nexport default SearchBar;","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Item = styled.li`\n    list-style:none;\n    :not(:last-child){\n        margin-bottom: 10px;\n    }\n`;\n\nexport const Link = styled(NavLink)`\n    font-size: 20px; \n    font-weight: bold; \n    margin: 0 0 24px;\n\n`;","import { Item, Link } from './Movies.styled';\nimport { useLocation } from 'react-router-dom';\nconst ListItemMovies = ({ movies }) => {\n\n    const location = useLocation();\n     return (\n        <ul>\n            {movies.map(({ id, title }) => {\n                return <Item key={id}>\n                    <Link to={`/movies/${id}`} state={{from:location}}> {title}</Link>\n                </Item>\n            })}\n        </ul>\n    );\n};\n\n\nexport default ListItemMovies;","import { useState, useEffect } from \"react\";\nimport SearchBar from \"components/SearchBar\";\nimport ListItemMovies from \"./ListItemMovies\";\nimport { searchMoviesOnDemand } from '../../api/apiServer';\nimport { useSearchParams } from \"react-router-dom\";\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const queryParams = searchParams.get('query') ?? '';\n\n    useEffect(() => {\n        if (!queryParams) return;\n        \n        searchMoviesOnDemand(queryParams)\n            .then(data => {\n                const result = data.results.map(({ id, title }) => ({ id, title }));\n                if ( data.results.length === 0) {\n                    return alert(\"We didn't find any movie with this title\")\n                } else {\n                    setMovies(result); \n                };\n            });\n    }, [queryParams]);\n\n    const querySubmitForm = newQuery => {\n        setSearchParams(newQuery ? { query: newQuery } : {});\n    };\n\n\n\n    return (\n        <>\n            <SearchBar onSubmit={querySubmitForm} />\n            <ListItemMovies movies={movies} />\n        </>\n    );\n};\n\n\nexport default Movies;\n\n\n\n\n"],"names":["Form","styled","Input","Button","onSubmit","useState","searchFilm","setSearchFilm","e","preventDefault","trim","alert","type","value","onChange","target","Item","Link","NavLink","movies","location","useLocation","map","id","title","to","state","from","setMovies","useSearchParams","searchParams","setSearchParams","queryParams","get","useEffect","searchMoviesOnDemand","then","data","result","results","length","newQuery","query"],"sourceRoot":""}